#################################################################################
#   Onebranch Pipelines - Buddy MSBuild (CDPXMigrated)                          #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger:
  - main

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 0
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  CDP_USER_SOURCE_FOLDER_CONTAINER_PATH: $(Build.SourcesDirectory)
  CDP_DEFINITION_BUILD_COUNT_DAY: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  CDP_DEFINITION_BUILD_COUNT_MONTH: $[counter(format('{0:yyyyMM}', pipeline.startTime), 1)]
  CDP_DEFINITION_BUILD_COUNT_YEAR: $[counter(format('{0:yyyy}', pipeline.startTime), 1)]
  NUGET_XMLDOC_MODE: none
  Codeql.Enabled: true

  # Docker image which is used to build the project https://aka.ms/obpipelines/containers
  # Image used in CDPX build: cdpxwin1809.azurecr.io/global/vse2019:16.8.2
  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest'

jobs:
- job: main
  pool:
    vmImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest'
  
  variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
    ob_outputDirectory: '$(REPOROOT)\out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
    ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl
    # ob_sdl_baseline_baselineFile: $(Build.SourcesDirectory)\.gdn\build.nonofficial.gdnbaselines
    # ob_sdl_codeSignValidation_excludes: -|**\*.js # Example -|**\*.js;-|**\Test*\**
    ob_artifactBaseName: 'drop'
    ob_sdl_cg_failOnAlert: false

  steps:
    - task: CmdLine@2
      inputs:
        script: |
          cd $(Build.SourcesDirectory)/AppConfiguration-DotnetProvider/
          move /y ./*  ..
          move /y ./build ..
          move /y ./examples ..
          move /y ./tests ..
          move /y ./src ..

    - task: CmdLine@2
      displayName: 'Install .NET'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd build/install-dotnet.ps1 -RestoreOnly
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CmdLine@2
      displayName: 'Restore'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd build.ps1 -RestoreOnly
        workingDirectory: '$(Build.SourcesDirectory)'


    - task: CmdLine@2
      displayName: 'Dotnet Build'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd build.ps1
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\buildlogs'
        Contents: |
          **/*
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\build\Build Logs'

    - task: CmdLine@2
      displayName: 'Dotnet Pack'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd pack.ps1
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\buildlogs'
        Contents: |
          **/*
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\package\Build Logs'

    - task: CmdLine@2
      displayName: 'Dotnet Test'
      inputs:
        script: '$(Build.SourcesDirectory)\build/CallPowerShell.cmd test.ps1|| exit /b 0'
        workingDirectory: '$(Build.SourcesDirectory)'


    # - task: CopyFiles@2
    #   inputs:
    #     SourceFolder: '$(Build.SourcesDirectory)\TestResults'
    #     Contents: '**\*.trx'
    #     TargetFolder: '$(Build.SourcesDirectory)\out\outputs\test\_post_command__run_log_alerts_schedular_tests\_testresults'

    - task: PublishTestResults@2
      displayName: 'Unit Tests'
      inputs:
        testResultsFormat: 'vstest'
        testResultsFiles: '**/*.trx'
        searchFolder: ''
        failTaskOnFailedTests: False
        testRunTitle: Unit Tests


    # one CmdLine@2 for each CDPx stage (restore/build/package/test) as needed
    #- task: CmdLine@2
    #  displayName: '<name from pipeline.user.full.yml'
    #  inputs:
    #    script: '$(Build.SourcesDirectory)\<script name>'
    #    workingDirectory: '$(Build.SourcesDirectory)'

    #  One CopyFiles@2 for each CDPx artifacts entry for each stage (restore/build/package/test) as needed
    #- task: CopyFiles@2
    #  inputs:
    #    SourceFolder: '<'from' from artifacts section>'
    #    Contents: '**\*'
    #    TargetFolder: '<'to' from artifacts section
          
    # Move this block after a task block to "see" current file layout on host agent.
    # Usually this belongs at the bottom of the build ( right before inline diffs ).  
    # - task: CmdLine@2 
    #   displayName: 'Generate file list'
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       md $(Build.SourcesDirectory)\out
    #       dir /b /s * > $(Build.SourcesDirectory)\out\filelist.txt

################################################################################################
#                              Remove tasks below before handoff                               #
################################################################################################
#        ↓ 
#        ↓- task: After you uncomment below tasks, please make sure your '-' align to the first '-' of this line.
#        ↓ 
    
    # Uncomment this task if your CDPx yaml has publish_to_legacy_artifacts set to TRUE 
    - task: DownloadBuildArtifacts@1
      displayName: '⚡️Download CDPx Build Artifact'
      inputs:
        buildType: 'specific'
        project: '$(System.TeamProjectId)'
        pipeline: '287'
        buildVersionToDownload: 'specific'
        buildId: '55014'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(REPOROOT)\cdpxArt'