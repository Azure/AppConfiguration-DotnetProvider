<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\..\build\NugetProperties.props" />

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Description>Microsoft.Extensions.Configuration.AzureAppConfiguration is a configuration provider for the .NET Core framework that allows developers to use Microsoft Azure's App Configuration service as a configuration source in their applications.</Description>
    <SignAssembly>true</SignAssembly>
    <DelaySign>false</DelaySign>
    <AssemblyOriginatorKeyFile>..\..\build\AzureAppConfiguration.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Azure.KeyVault" Version="3.0.3" />
    <PackageReference Include="Microsoft.Azure.Management.KeyVault" Version="2.4.3" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="$(MicrosoftExtensionsConfigurationVersion)" />
    <PackageReference Include="Microsoft.IdentityModel.Clients.ActiveDirectory" Version="5.1.0" />
    <PackageReference Include="Microsoft.Rest.ClientRuntime.Azure" Version="3.3.19" />
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
    <PackageReference Include="Microsoft.Azure.AppConfiguration.AzconfigClient" Version="$(MicrosoftAzconfigClientVersion)" />
    <PackageReference Include="Microsoft.Azure.AppConfiguration.ManagedIdentityConnector" Version="$(MicrosoftAzconfigManagedIdentityConnectorVersion)" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="4.5.0" />
    <PackageReference Include="System.Interactive.Async" Version="$(SystemInteractiveAsyncVersion)" />
    <PackageReference Include="System.Reactive.Linq" Version="$(SystemReactiveLinqVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.Http.Extensions" Version="$(MicrosoftAspNetCoreHttpExtensionsVersion)" />
  </ItemGroup>
  
  <PropertyGroup>
    <!-- 
      This method of package referencing is used to bind package depedency versions to the generated .nuspec file.
      This will no longer be needed when the configuration provider can depend on a public version of the Azconfig .NET Core SDK
    -->
    <MicrosoftExtensionsConfigurationVersion>1.0.0</MicrosoftExtensionsConfigurationVersion>
    <NewtonsoftJsonVersion>11.0.2</NewtonsoftJsonVersion>
    <MicrosoftAzconfigClientVersion>1.0.0-preview-008870001-1052</MicrosoftAzconfigClientVersion>
    <MicrosoftAzconfigManagedIdentityConnectorVersion>1.0.0-preview-008930001-1422</MicrosoftAzconfigManagedIdentityConnectorVersion>
    <SystemInteractiveAsyncVersion>3.1.1</SystemInteractiveAsyncVersion>
    <SystemReactiveLinqVersion>4.0.0</SystemReactiveLinqVersion>
    <MicrosoftAspNetCoreHttpExtensionsVersion>2.1.1</MicrosoftAspNetCoreHttpExtensionsVersion>
  </PropertyGroup>

  <!-- After the build, we write the .nuspec file to the output directory -->
  <Import Project=".\.nuspec.props" />
  <Target Name="WriteToFile" AfterTargets="Build">  
      <WriteLinesToFile File="$(OutDir)\.nuspec" Lines="$(NuspecContent)" Overwrite="true" Encoding="Unicode" />  
  </Target>
  
  <!-- Ensure any package generation is done via the generated nuspec file. -->
  <Target Name="PackCheck" AfterTargets="Pack">
    <Error Text=" The NuspecFile property must be set to build this NuGet package." Condition="'$(NuspecFile)' == ''" />  
  </Target>
  
  <PropertyGroup>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\XMLComments\$(MSBuildProjectName).xml</DocumentationFile>
  </PropertyGroup>

  <Target Name="PrepublishScript" BeforeTargets="PrepareForPublish">
    <Copy SourceFiles="$(DocumentationFile)" DestinationFolder="$(PublishDir)\XMLComments" SkipUnchangedFiles="false" />
  </Target>

</Project>
