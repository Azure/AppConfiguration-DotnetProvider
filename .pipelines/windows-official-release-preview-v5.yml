#################################################################################
#   Onebranch Pipelines - Buddy MSBuild (CDPXMigrated)                          #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

pr:
- release/preview/v5

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  Codeql.Enabled: true

jobs:
- job: main
  pool:
    vmImage: 'windows-latest'
  
  variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
    Codeql.Enabled: true

  steps:

    - task: CmdLine@2
      displayName: 'Install .NET'
      inputs:
        script: build\CallPowerShell.cmd build/install-dotnet.ps1 -RestoreOnly
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CmdLine@2
      displayName: 'Restore'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd build.ps1 -RestoreOnly
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: onebranch.pipeline.version@1 # generates automatic version. For other versioning options check https://aka.ms/obpipelines/versioning
      displayName: 'Setup BuildNumber'
      inputs:
        system: 'BuildRevision'
        major: '1'
        minor: '0'
        name: 'Azconfig-DotnetProvider'
        # exclude_commit: true


    - task: CmdLine@2
      displayName: 'Dotnet Build'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd build.ps1
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\buildlogs'
        Contents: |
          **/*
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\build\Build Logs'

    - task: CmdLine@2
      displayName: 'Dotnet Pack'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd pack.ps1
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\buildlogs'
        Contents: |
          **/*
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\package\Build Logs'

    - task: onebranch.pipeline.signing@1
      displayName: 'Signing'
      inputs:
        command: 'sign'
        signing_environment: 'azure-ado'
        signing_profile: 'external_distribution '
        files_to_sign: '*/bin/Release/**/*'
        search_root: '$(Build.SourcesDirectory)\src'
              

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\src'
        Contents: |
          */bin/Release/**/*
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\build\Binaries'

    - task: CmdLine@2
      displayName: 'Dotnet Pack'
      inputs:
        script: $(Build.SourcesDirectory)\build\CallPowerShell.cmd pack.ps1
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\buildlogs'
        Contents: |
          **/*
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\package\Build Logs'



    - task: onebranch.pipeline.signing@1
      displayName: 'Signing'
      inputs:
        command: 'sign'
        signing_environment: 'azure-ado'
        signing_profile: 'external_distribution '
        files_to_sign: '*/bin/PackageOutput/**/*.nupkg'
        search_root: '$(Build.SourcesDirectory)\src'
              

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)\src'
        Contents: |
          */bin/PackageOutput/**/*.nupkg
        TargetFolder: '$(Build.SourcesDirectory)\out\outputs\package\Packages'

    - task: CmdLine@2
      displayName: 'Dotnet Test'
      inputs:
        script: '$(Build.SourcesDirectory)\build/CallPowerShell.cmd test.ps1|| exit /b 0'
        workingDirectory: '$(Build.SourcesDirectory)'


    # - task: CopyFiles@2
    #   inputs:
    #     SourceFolder: '$(Build.SourcesDirectory)\TestResults'
    #     Contents: '**\*.trx'
    #     TargetFolder: '$(Build.SourcesDirectory)\out\outputs\test\_post_command__run_log_alerts_schedular_tests\_testresults'

    - task: PublishTestResults@2
      displayName: 'Unit Tests'
      inputs:
        testResultsFormat: 'vstest'
        testResultsFiles: '**/*.trx'
        searchFolder: ''
        failTaskOnFailedTests: False
        testRunTitle: Unit Tests


    # one CmdLine@2 for each CDPx stage (restore/build/package/test) as needed
    #- task: CmdLine@2
    #  displayName: '<name from pipeline.user.full.yml'
    #  inputs:
    #    script: '$(Build.SourcesDirectory)\<script name>'
    #    workingDirectory: '$(Build.SourcesDirectory)'

    #  One CopyFiles@2 for each CDPx artifacts entry for each stage (restore/build/package/test) as needed
    #- task: CopyFiles@2
    #  inputs:
    #    SourceFolder: '<'from' from artifacts section>'
    #    Contents: '**\*'
    #    TargetFolder: '<'to' from artifacts section
          
    # Move this block after a task block to "see" current file layout on host agent.
    # Usually this belongs at the bottom of the build ( right before inline diffs ).  
    # - task: CmdLine@2 
    #   displayName: 'Generate file list'
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       md $(Build.SourcesDirectory)\out
    #       dir /b /s * > $(Build.SourcesDirectory)\out\filelist.txt

################################################################################################
#                              Remove tasks below before handoff                               #
################################################################################################
#        ↓ 
#        ↓- task: After you uncomment below tasks, please make sure your '-' align to the first '-' of this line.
#        ↓ 
    
    # Uncomment this task if your CDPx yaml has publish_to_legacy_artifacts set to TRUE 
    #- task: DownloadBuildArtifacts@1
    #  displayName: '⚡️Download CDPx Build Artifact'
    #  inputs:
    #    buildType: 'specific'
    #    project: '$(System.TeamProjectId)'
    #    pipeline: '287'
    #    buildVersionToDownload: 'specific'
    #    buildId: '55014'
    #    downloadType: 'single'
    #    artifactName: 'drop'
    #    downloadPath: '$(REPOROOT)\cdpxArt'